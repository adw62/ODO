#!/usr/local/bin/env python

from scipy.optimize import minimize
from scipy.optimize import approx_fprime

class Optimize(object):
    def __init__(self, data, net, seed_vec, target):
        self.bounds = get_bounds(data)
        scalerx, scalery = data.get_scaler()

        exp = scalery.transform([[target]])[0]
        x = scalerx.transform([seed_vec])

        fprime = lambda x, exp, net: approx_fprime(x, f, 0.01, exp, net)

        sol = minimize(f, x, args=(exp, net), jac=fprime, method='L-BFGS-B', bounds=self.bounds)
        self.property = scalery.inverse_transform([[float(net(sol.x))]])[0]
        self.solution = scalerx.inverse_transform([sol.x])[0]

def f(x, exp, net):
    #Here call to model
    fx = net(x).cpu().detach().numpy()
    return sum([(fxi-expi)**2 for fxi, expi in zip(fx, exp)])

def get_bounds(data):
    scalerx, scalery = data.get_scaler()
    #look through data here to automatically find bounds or take as an argument
    upper = [
        [6.558, 865.1, 1169, 5, 10, 0.8182, 7, 10, 420.5, 487.1, 27, 24, 11, 11, 11, 1, 9, 4, 2, 4, 1, 3, 2, 3, 0, 2, 5,
         6, 16, 14, 17, 17, 12, 4, 1, 2, 8, 8, 2, 40, 1, 2, 55, 1, 2, 0, 2, 2, 2, 3, 1, 2, 2, 2, 2, 4, 1, 1, 2, 7, 8, 1,
         5, 4, 13, 5, 5, 6, 2, 2, 2, 2, 0, 0, 2, 8, 3, 1, 4, 2, 10, 1, 2, 1, 1, 7, 8, 3, 0, 3, 0, 8, 5, 30, 3, 2, 7, 3,
         4, 4, 2, 4, 3, 21, 2, 1, 2, 2, 2, 2, 52, 1, 0, 10, 3, 8, 0, 7, 2, 2, 4, 2, 2, 0, 6, 5, 1, 4, 58, 4, 2, 14, 1,
         1, 1, 4, 2, 2, 0, 3, 3, 3, 4, 2, 2, 1, 2, 12, 38, 28, 5, 7, 8, 12, 19, 4, 0, 17, 1, 5, 24, 10, 1, 2, 12, 16,
         10, 8, 0, 4, 0, 1, 5, 2, 2, 0, 4, 6, 3, 2, 1, 0, 7, 11, 18, 0, 0, 0, 1, 0, 0, 1, 1, 0, 3, 4, 4, 1, 4, 4, 5, 5,
         2, 12, 6, 4, 14, 1, 4, 6, 6, 2, 4, 1, 5, 10, 56, 6, 14, 2, 6, 29, 21, 16, 4, 10, 6, 8, 14, 2, 4, 17, 4, 10, 3,
         2, 4, 3, 3, 2, 4, 0, 5, 4, 6, 0, 11, 7, 5, 5, 7, 1, 1, 11, 2, 4, 8, 4, 1, 16, 2, 1, 6, 1, 16, 14, 9, 7, 5, 7,
         4, 7, 2, 6, 3, 0, 0, 4, 7, 1, 2, 2, 1, 4, 0, 0, 0, 0, 7, 3, 14, 14, 14, 9, 4, 27, 36, 27, 14, 7, 34, 18, 11,
         24, 24, 12, 16, 7, 68, 38, 62, 92, 81, 60, 31, 86, 26, 44, 20, 23, 101, 12, 50, 180, 96, 76, 5, 2, 1, 14]]
    lower = [
        [-3.298, 54.8, 94.11, 0, 0, 0, 0, -5, 0, 3.88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0]]
    upper = scalerx.transform(upper)
    lower = scalerx.transform(lower)
    return [[x, y] for x, y in zip(lower[0], upper[0])]
        
        
